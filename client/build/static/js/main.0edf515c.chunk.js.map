{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/storyReducers.js","reducers/photoReducers.js","reducers/weightReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/layout/AsideNav.js","components/layout/TwoColumn.js","components/layout/TitleSection.js","components/forms/StoryForm.js","components/imageUpload/imageUpload.js","components/weightEntry/WeightEntry.js","components/dashboard/Dashboard.js","actions/formActions.js","actions/weightActions.js","components/trackers/WeightTracker.js","actions/trackerActions.js","components/photos/Photos.js","actions/photoActions.js","components/timeline/TimelineItem.js","components/stories/Story.js","components/timeline/TimelineContainer.js","components/stories/Stories.js","actions/storyActions.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","stories","results","weights","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","errors","photos","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Navbar","onLogoutClick","e","preventDefault","_this","props","react_default","a","createElement","className","react_router_dom","to","style","width","borderRadius","letterSpacing","float","marginTop","marginRight","onClick","this","Component","connect","Landing","height","Register","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","defineProperty","target","id","value","onSubmit","newUser","firstName","lastName","babyName","email","password","password2","console","log","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","_ref","component","rest","objectWithoutProperties","react_router","assign","render","AsideNav","TwoColumnLayout","components_layout_AsideNav","children","TitleSection","title","StoryForm","valueChange","event","inputVal","submitForm","placeholder","color","fontSize","ImageUpload","onImageChange","photo","postPhotos","compiled_default","withIcon","buttonText","withPreview","imgExtension","maxFileSize","WeightEntry","updateWeight","weightVal","submitWeight","Dashboard","storySubmit","weightSubmit","pictureSubmit","pictures","formData","FormData","forEach","file","i","append","moment","fetch","method","body","json","images","layout_TwoColumn","components_layout_TitleSection","split","forms_StoryForm","imageUpload","components_weightEntry_WeightEntry","story","date","inputValue","userEmail","format","weight","weightValue","global","maintainAspectRatio","Weights","getWeights","labels","map","datasets","label","fill","borderColor","react_chartjs_2_es","Photos","getPhotos","item","index","src","url","key","gettingPictures","TimelineItem","text","Timeline","entry","idx","timeline_TimelineItem","Stories","getStories","timelineData","createDate","content","TimelineContainer","jwtToken","currentTime","Date","now","exp","window","location","href","App","es","layout_Navbar","exact","path","private_route_PrivateRoute","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0edf515c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Set and delete the Authorization header for our axios requests depending on whether a user is logged in or not\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  console.log(\"UserData\", userData);\n  \n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      decoded.email = userData.email;\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => {\n\n  return (dispatch) => {\n      // Remove token from local storage\n    localStorage.removeItem(\"jwtToken\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n  }\n\n  \n};","export const GET_ERRORS = \"GET_ERRORS\";\n\n// Auth\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n// Stories Form\nexport const SUBMIT_FORM_REQUEST = \"SUBMIT_FORM_REQUEST\";\nexport const FORM_REQUEST_SUBMITTED = \"FORM_REQUEST_SUBMITTED\";\nexport const FORM_REQUEST_FAILED = \"FORM_REQUEST_FAILED\";\n\n// Stories (Display)\nexport const GETTING_STORIES = \"GETTING_STORIES\";\nexport const GOT_STORIES = \"GOT_STORIES\";\nexport const FAILED_GETTING_STORIES = \"FAILED_GETTING_STORIES\";\n\n// Photos\nexport const POSTING_PHOTOS = \"POSTING_PHOTOS\";\nexport const POSTED_PHOTOS = \"POSTED_PHOTOS\";\nexport const FAILED_POSTING_PHOTOS = \"FAILED_POSTING_PHOTOS\";\nexport const GETTING_PHOTOS = \"GETTING_PHOTOS\";\nexport const GOT_PHOTOS = \"GOT_PHOTOS\";\nexport const FAILED_GETTING_PHOTOS = \"FAILED_GETTING_PHOTOS\";\n\n// Weights Form\nexport const SUBMIT_WEIGHT_REQUEST = \"SUBMIT_WEIGHT_REQUEST\";\nexport const WEIGHT_REQUEST_SUBMITTED = \"WEIGHT_REQUEST_SUBMITTED\";\nexport const WEIGHT_REQUEST_FAILED = \"WEIGHT_REQUEST_FAILED\";\n\n// Weights Tracker (Display)\nexport const GETTING_WEIGHTS = \"GETTING_WEIGHTS\";\nexport const GOT_WEIGHTS = \"GOT_WEIGHTS\";\nexport const FAILED_GETTING_WEIGHTS = \"FAILED_GETTING_WEIGHTS\";","import { SET_CURRENT_USER, USER_LOADING } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as Types from \"../actions/types\";\n\nconst initialState = {\n  stories: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Types.GETTING_STORIES:\n      return {\n        ...state,\n        loading: true\n      };\n    case Types.GOT_STORIES:\n      return {\n        ...state,\n        stories: action.stories,\n        loading: false\n      };\n    case Types.FAILED_GETTING_STORIES:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import * as Types from \"../actions/types\";\n\nconst initialState = {\n  results: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Types.POSTING_PHOTOS:\n        return {\n          ...state,\n          loading: true\n        };\n    case Types.POSTED_PHOTOS:\n        return {\n          ...state,\n          results: action.results,\n          loading: false\n        };\n    case Types.GETTING_PHOTOS:\n        return {\n          ...state,\n          loading: true\n        };\n    case Types.GOT_PHOTOS:\n        return {\n          ...state,\n          results: action.results,\n          loading: false\n        };\n    default:\n      return state;\n  }\n}\n","import * as Types from \"../actions/types\";\n\nconst initialState = {\n  weights: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Types.GETTING_WEIGHTS:\n      return {\n        ...state,\n        loading: true\n      };\n    case Types.GOT_WEIGHTS:\n      return {\n        ...state,\n        weights: action.weights,\n        loading: false\n      };\n    case Types.FAILED_GETTING_WEIGHTS:\n      return {\n        ...state,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducers from \"./authReducers\";\nimport errorReducers from \"./errorReducers\";\nimport storyReducers from \"./storyReducers\";\nimport photoReducers from \"./photoReducers\";\nimport weightReducers from \"./weightReducers\"\n\nexport default combineReducers({\n  auth: authReducers,\n  errors: errorReducers,\n  stories: storyReducers,\n  photos: photoReducers,\n  weights: weightReducers\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper teal lighten-2\">\n            <Link to=\"/\" className=\"col s5 brand-logo center white-text\">\n              <i className=\"fas fa-baby-carriage\"> Tiny Timelines </i>\n            </Link>\n            <div className=\"col s12 center-align blue-grey-text text-darken-4\">\n              <button\n                style={{\n                  width: \"150px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  float: \"right\",\n                  marginTop: \"4px\",\n                  marginRight: \"20px\"\n                }}\n                onClick={this.onLogoutClick}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  //{ logoutUser }\n)(Navbar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Landing.css\";\n\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"30vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <p className=\"flow-text blue-grey-text text-darken-4\">\n              Privacy, safe storage, and fun features for you and your family!\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n              >\n                Register\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n              >\n                Log In\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      babyName: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      babyName: this.state.babyName,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    console.log(newUser);\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"fas fa-arrow-left\" /> Back to home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-4\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.firstName}\n                  error={errors.firstName}\n                  id=\"firstName\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.firstName\n                  })}\n                />\n                <label htmlFor=\"firstName\" className=\"blue-text text-darken-2\"><b>First Name</b></label>\n                <span className=\"red-text\">{errors.firstName}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.lastName}\n                  error={errors.lastName}\n                  id=\"lastName\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.lastName\n                  })}\n                />\n                <label htmlFor=\"lastName\" className=\"blue-text text-darken-2\"><b>Last Name</b></label>\n                <span className=\"red-text\">{errors.lastName}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.babyName}\n                  error={errors.babyName}\n                  id=\"babyName\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.babyName\n                  })}\n                />\n                <label htmlFor=\"babyName\" className=\"blue-text text-darken-2\"><b>Baby's First Name</b></label>\n                <span className=\"red-text\">{errors.babyName}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\" className=\"blue-text text-darken-2\"><b>Email</b></label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\" className=\"blue-text text-darken-2\"><b>Password</b></label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\" className=\"blue-text text-darken-2\"><b>Confirm Password</b></label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n                >\n                  Sign up\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    console.log(userData);\n    this.props.loginUser(userData); // Since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"fas fa-arrow-left\" /> Back to home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-4\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\" className=\"blue-text text-darken-2\"><b>Email</b></label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\" className=\"blue-text text-darken-2\"><b>Password</b></label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n                >\n                  Login\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./AsideNav.css\";\n\nclass AsideNav extends Component {\n\n  render() {\n    return (\n      <div className=\"aside-navigation-container\">\n          <div className=\"col s6\">\n            <Link\n              to=\"/dashboard\"\n              className=\"nav-btn btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n            >\n              Home\n            </Link>\n          </div>\n          <div className=\"col s6\">\n            <Link\n              to=\"/stories\"\n              className=\"nav-btn btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n            >\n              Stories\n            </Link>\n          </div>\n          <div className=\"col s6\">\n            <Link\n              to=\"/photos\"\n              className=\"nav-btn btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n            >\n              Photos\n            </Link>\n          </div>\n          <div className=\"col s6\">\n            <Link\n              to=\"/weights\"\n              className=\"nav-btn btn btn-large waves-effect waves-light hoverable teal lighten-2\"\n            >\n              Weights\n            </Link>\n          </div>\n      </div>\n    );\n  }\n}\n\nAsideNav.propTypes = {\n};\n\nexport default AsideNav;\n\n\n\n","import React, { Component } from \"react\";\nimport AsideNav from \"./AsideNav\";\nimport \"./TwoColumn.css\";\n\nclass TwoColumnLayout extends Component {\n  render() {\n    return (\n      <div className=\"two-column-container\">\n        <div className=\"left-column\">\n          <AsideNav />\n        </div>\n        <div className=\"right-column\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default TwoColumnLayout;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TitleSection.css\";\n\nclass TitleSection extends Component {\n  render() {\n    return (\n      <div className=\"title-section-container\">\n        <div className=\"title-container\">\n          <h5>{this.props.title}</h5>\n        </div>\n        <div className=\"content-container\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nTitleSection.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default TitleSection;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass StoryForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputVal: \"\"\n    };\n  }\n\n  valueChange = event => {\n    this.setState({ inputVal: event.target.value });\n  };\n\n  submitForm = () => {\n    console.log(\"Clicked!\", this.state.inputVal);\n    this.props.onSubmit(this.state.inputVal);\n    this.setState({ inputVal: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"story-form-container\">\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Today...\"\n            onChange={this.valueChange}\n            value={this.state.inputVal}\n            style={{\n              color: \"rgba(1, 55, 105, 1)\",\n              fontSize: \"20px\"\n            }}\n          />\n        </div>\n        <div>\n          <button className=\"btn\" onClick={this.submitForm}>\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nStoryForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default StoryForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageUploader from 'react-images-upload';\n\nclass ImageUpload extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state= {\n            photos: []\n        }\n    }\n\n    onImageChange = photo => {\n        console.log(\"photo\", photo);\n        this.setState({photos: photo})\n    }\n\n    postPhotos = () => {\n        console.log(\"Clicked!\", this.state.photos);\n        this.props.onSubmit(this.state.photos);\n        // Clear out photos right after being submitted\n        // this.setState({ photos: [] });\n        \n    }\n\n  render() {\n    return (\n      <div className=\"image-upload-container\">\n          <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onImageChange}\n                withPreview={true}\n                imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\n                maxFileSize={5242880}\n            />\n\n            <div>\n                <button className=\"btn\" onClick={this.postPhotos}>\n                    Submit\n                </button>\n            </div>\n      </div>\n    );\n  }\n}\n\nImageUpload.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default ImageUpload;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./WeightEntry.css\";\n\nclass WeightEntry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weightVal: \"\"\n    };\n  }\n\n  updateWeight = event => {\n    this.setState({ weightVal: event.target.value });\n  };\n\n  submitWeight = () => {\n    console.log(\"Clicked!\", this.state.weightVal);\n    this.props.onSubmit(this.state.weightVal);\n    this.setState({ weightVal: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"weight-entry-container\">\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Please use decimals. (9.06 = 9lbs 6oz)\"\n            onChange={this.updateWeight}\n            value={this.state.weightVal}\n            style={{\n              color: \"rgba(1, 55, 105, 1)\",\n              fontSize: \"20px\"\n            }}\n          />\n        </div>\n        <div>\n          <button className=\"btn\" onClick={this.submitWeight}>\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nWeightEntry.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default WeightEntry;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { submitForm } from \"../../actions/formActions\";\nimport { postingPictures } from \"../../actions/photoActions\";\nimport { submitWeight } from \"../../actions/weightActions\";\nimport TwoColumnLayout from \"../layout/TwoColumn\";\nimport TitleSection from \"../layout/TitleSection\";\nimport StoryForm from \"../forms/StoryForm\";\nimport ImageUpload from \"../imageUpload/imageUpload\";\nimport WeightEntry from \"../weightEntry/WeightEntry\";\nimport moment from \"moment\";\n\n\nclass Dashboard extends Component {\n\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n  }\n\n  storySubmit = inputVal => {\n    console.log(\"Auth State\", this.props.auth);\n    this.props.submitForm(inputVal, this.props.auth.user);\n  };\n\n  weightSubmit = weightVal => {\n    console.log(\"Weight submitted!\");\n    this.props.submitWeight(weightVal, this.props.auth.user);\n  };\n\n  pictureSubmit = pictures => {\n    console.log(\"Dashboard callback\", pictures);\n\n\n    let formData = new FormData()\n    pictures.forEach((file, i) => {\n      formData.append(i, file)\n    });\n\n    formData.append(\"EMAIL\", this.props.auth.user.email)\n    formData.append(\"date\", moment());\n\n    console.log(\"Form Data\", formData);\n\n    fetch(`/api/photos/post`, {\n      method: 'POST',\n      body: formData\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(images => {\n      console.log(\"Success 2\", images);\n    }).catch(err => {\n      console.log(\"Error\", err);\n    });\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    console.log(user);\n    return (\n      <div>\n        <TwoColumnLayout>\n          <TitleSection\n            title={\"Welcome, \" + user.firstName.split(\" \")[0] + \"!\"}\n          />\n          <TitleSection\n            title={\"What's new with \" + user.babyName.split(\" \")[0] + \"?\"}\n          >\n            <StoryForm onSubmit={this.storySubmit} />\n          </TitleSection>\n\n          <TitleSection title=\"Photo Upload\">\n            <ImageUpload onSubmit={this.pictureSubmit} />\n          </TitleSection>\n\n          <TitleSection title=\"Weight Entry\">\n            <WeightEntry onSubmit={this.weightSubmit} />\n          </TitleSection>\n        </TwoColumnLayout>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser()),\n    submitForm: (story, user, date) =>\n      dispatch(submitForm(story, user.email, date)),\n    submitWeight: (weight, user, date) =>\n      dispatch(submitWeight(weight, user.email, date))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  //{ logoutUser }\n)(Dashboard);\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport * as Types from \"./types\";\n\nexport const submitForm = (inputValue, userEmail) => {\n  const data = {\n    email: userEmail,\n    story: inputValue,\n    date: moment().format(\"MMMM Do YYYY\")\n  };\n  return dispatch => {\n    dispatch({\n      type: Types.SUBMIT_FORM_REQUEST\n    });\n    axios\n      .post(\"/api/forms/submit\", data)\n      .then(res => {\n        console.log(\"Success!\");\n        dispatch({\n          type: Types.FORM_REQUEST_SUBMITTED\n        });\n      })\n      .catch(err => {\n        console.log(\"Didn't work\", err);\n        dispatch({\n          type: Types.FORM_REQUEST_FAILED\n        });\n      });\n  };\n};\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport * as Types from \"./types\";\n\nexport const submitWeight = (weightValue, userEmail) => {\n  const data = {\n    email: userEmail,\n    weight: weightValue,\n    date: moment().format(\"MMMM Do YYYY\")\n  };\n  return dispatch => {\n    dispatch({\n      type: Types.SUBMIT_WEIGHT_REQUEST\n    });\n    axios\n      .post(\"/api/weights/submit\", data)\n      .then(res => {\n        console.log(\"Success!\");\n        dispatch({\n          type: Types.WEIGHT_REQUEST_SUBMITTED\n        });\n      })\n      .catch(err => {\n        console.log(\"Didn't work\", err);\n        dispatch({\n          type: Types.WEIGHT_REQUEST_FAILED\n        });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getWeights } from \"../../actions/trackerActions\";\nimport \"./WeightTracker.css\";\nimport { Line, defaults } from \"react-chartjs-2\";\nimport TwoColumnLayout from \"../layout/TwoColumn\";\nimport TitleSection from \"../layout/TitleSection\";\n\ndefaults.global.maintainAspectRatio = false;\n\nclass Weights extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    const { user } = this.props.auth;\n    this.props.getWeights(user.email);\n  }\n\n  render() {\n    const { user } = this.props.auth;\n    console.log(user);\n    console.log(\"weights: \", this.props.weights);\n\n    const data = {\n      labels: this.props.weights.weights.map(weight => {\n        return weight.date;\n      }),\n      datasets: [\n        {\n          label: user.babyName.split(\" \")[0] + \"'s weight\",\n          data: this.props.weights.weights.map(weight => {\n            return weight.weight;\n          }),\n          fill: false, // Don't fill area under the line\n          borderColor: \"rgba(237, 113, 138, 1)\" // Line color\n        }\n      ]\n    };\n\n    return (\n      <div>\n        <TwoColumnLayout>\n          <TitleSection\n            title={user.babyName.split(\" \")[0] + \"'s growth over time\"}\n          />\n\n          <div className=\"Chart\">\n            <article className=\"canvas-container\">\n              <Line data={data} height={500} />\n            </article>\n          </div>\n        </TwoColumnLayout>\n      </div>\n    );\n  }\n}\n\nWeights.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  weights: state.weights\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser()),\n    getWeights: userEmail => dispatch(getWeights(userEmail))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  // { logoutUser }\n)(Weights);\n","import axios from \"axios\";\n\nimport * as Types from \"./types\";\n\nexport const getWeights = userEmail => {\n  var data = {\n    email: userEmail\n  };\n  return dispatch => {\n    dispatch({\n      type: Types.GETTING_WEIGHTS\n    });\n    axios\n      .post(\"/api/tracker/getall\", data)\n      .then(res => {\n        console.log(\"Success!\", res);\n        dispatch({\n          type: Types.GOT_WEIGHTS,\n          weights: res.data\n        });\n        console.log(\"Success!\");\n        //dispatch\n      })\n      .catch(err => {\n        console.log(\"Didn't work\", err);\n        dispatch({\n            type: Types.FAILED_GETTING_WEIGHTS\n          });\n      });\n  };\n};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport TwoColumnLayout from \"../layout/TwoColumn\";\nimport TitleSection from \"../layout/TitleSection\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {gettingPictures} from \"../../actions/photoActions\";\nimport \"./Photos.css\";\n\nclass Photos extends Component {\n  componentDidMount(){\n    this.props.getPhotos(this.props.auth.user.email);\n  }\n\n  render() {\n    const { user } = this.props.auth;\n    console.log(\"Photos\", this.props.photos);\n    return (\n      <div className=\"photos-container\">\n        <TwoColumnLayout>\n          <TitleSection\n            title={\"Here are \" + user.babyName.split(\" \")[0] + \"'s photos!\"}\n          />\n\n          {this.props.photos.results.map((item, index) => {\n            return (\n              <img src={item.url} key={index} />\n            )\n          })}\n        </TwoColumnLayout>\n      </div>\n    );\n  }\n}\n\nPhotos.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  photos: state.photos\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser()),\n    getPhotos: (userEmail) => dispatch(gettingPictures(userEmail))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  //{ logoutUser }\n)(Photos);\n","import axios from \"axios\";\n\nimport * as Types from \"./types\";\n\nexport const postingPictures = (userEmail, pictures) => {\n  return (dispatch) => {\n      //aws.uploadFile (i think)\n      //.then(data => {\n      //   dispatch({\n      //     type: Types.POSTED_IMAGES,\n      //     results: data.location\n      //   });\n      // })\n      \n  }\n};\n\nexport const gettingPictures = userEmail => {\n  return (dispatch) => {\n    dispatch({\n      type: Types.GETTING_PHOTOS\n    });\n    axios\n      .post(\"/api/photos/getall\", {email: userEmail})\n      .then(res => {\n        console.log(\"Success!\", res);\n        dispatch({\n          type: Types.GOT_PHOTOS,\n          results: res.data\n        });\n        console.log(\"Success!\");\n        //dispatch\n      })\n      .catch(err => {\n        console.log(\"Didn't work\", err);\n        dispatch({\n            type: Types.FAILED_GETTING_PHOTOS\n          });\n      });\n      \n  }\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TimelineItem extends Component {\n  render() {\n    return (\n      <div className=\"timeline-item\">\n        <div className=\"timeline-item-content\">\n          <time>{this.props.date}</time>\n          <p>{this.props.text}</p>\n          <span className=\"circle\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nTimelineItem.propTypes = {\n  date: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default TimelineItem;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Story.css\";\n\nclass Story extends Component {\n  render() {\n    return (\n      <div className=\"story-container\">\n        <div className=\"date-container\">\n          <span>Created on: {this.props.date}</span>\n        </div>\n        <div className=\"content-container\">\n          {this.props.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nStory.propTypes = {\n  story: PropTypes.object.isRequired\n};\n\nexport default Story;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TimelineItem from \"./TimelineItem\"\nimport \"./Timeline.css\";\n\nclass Timeline extends Component {\n  render() {\n    if (this.props.data.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"timeline-container\">\n        {this.props.data.map((entry, idx) => (\n          <TimelineItem date={entry.date} text={entry.text} key={idx} />\n        ))}\n      </div>\n    );\n  }\n}\n\nTimeline.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default Timeline;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getStories } from \"../../actions/storyActions\";\nimport TwoColumnLayout from \"../layout/TwoColumn\";\nimport TitleSection from \"../layout/TitleSection\";\nimport Story from \"./Story\";\nimport Timeline from \"../timeline/TimelineContainer\";\n\nclass Stories extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    const { user } = this.props.auth;\n    this.props.getStories(user.email);\n  }\n\n  render() {\n    const { user } = this.props.auth;\n    console.log(user);\n    console.log(\"stories: \", this.props.stories);\n\n    if(this.props.stories === null \n      || this.props.stories.stories.length === 0){\n      return null;\n    }\n\n    let timelineData = [];\n    this.props.stories.stories.forEach(function(story){\n      timelineData.push({\n        date: story.createDate,\n        text: story.content\n      })\n    });\n    \n    return (\n      <div>\n        <TwoColumnLayout>\n          <TitleSection\n            title={\"Here are \" + user.babyName.split(\" \")[0] + \"'s stories!\"}\n          />\n\n          <Timeline data={timelineData} />\n        </TwoColumnLayout>\n      </div>\n    );\n  }\n}\n\nStories.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  stories: state.stories\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logoutUser: () => dispatch(logoutUser()),\n    getStories: userEmail => dispatch(getStories(userEmail))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n  //{ logoutUser }\n)(Stories);\n","import axios from \"axios\";\n\nimport * as Types from \"./types\";\n\nexport const getStories = userEmail => {\n  var data = {\n    email: userEmail\n  };\n  return dispatch => {\n    dispatch({\n      type: Types.GETTING_STORIES\n    });\n    axios\n      .post(\"/api/stories/getall\", data)\n      .then(res => {\n        console.log(\"Success!\", res);\n        dispatch({\n          type: Types.GOT_STORIES,\n          stories: res.data\n        });\n        console.log(\"Success!\");\n        //dispatch\n      })\n      .catch(err => {\n        console.log(\"Didn't work\", err);\n        dispatch({\n            type: Types.FAILED_GETTING_STORIES\n          });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Weights from \"./components/trackers/WeightTracker\"\nimport Photos from \"./components/photos/Photos\";\nimport Stories from \"./components/stories/Stories\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/weights\" component={Weights} />\n              <PrivateRoute exact path=\"/photos\" component={Photos} />\n              <PrivateRoute exact path=\"/stories\" component={Stories} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}